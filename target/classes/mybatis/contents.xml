<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- dev.mvc.categrp.CategrpDAOInter 패키지에 등록된 interface 명시,
      패키지명과 인터페이스명은 실제로 존재해야함,
      Spring이 내부적으로 자동으로 interface를 구현해줌. -->
      
<mapper namespace="dev.mvc.dogcontents.ContentsDAOInter"> 

  <insert id="create" parameterType="ContentsVO">
    INSERT INTO PRODUCT (CATEGRPNO, PRODUCTNO, REPOSITORYNO, TITLE, KEYWORD, RDATE , MANAGER, CONTENTS, deliveryCharge)
    VALUES
    (
        #{categrpno},
        (SELECT NVL(MAX(PRODUCTNO), 0) + 1 FROM PRODUCT),
        #{repositoryno},
        #{title},
        #{keyword},
        SYSDATE,
        #{manager},
        #{contents},
        #{deliveryCharge}
    )
  </insert>
  
  <select id="list" parameterType="int" resultType="ContentsVO">
     select p.productno, 
     p.thumb as view_thumb,
     pp.title,
     pp.keyword,
     pp.cnt,
     r.price
     from productfile p inner join product pp 
          on p.productno = pp.productno 
     inner join repository r 
          on r.repositoryno = pp.repositoryno
     where p.thumb is not null and pp.categrpno = #{categrpno}
     order by pp.rdate desc
  </select>
  
  <select id="list_all" resultType="ContentsVO" parameterType="HashMap">
     select row_cnt,productno,view_thumb,title,keyword,cnt,price
     from(
     select
     ROW_NUMBER() OVER(ORDER BY PP.RDATE desc) AS row_cnt,
     pp.productno,
     p.thumb as view_thumb,
     pp.title,
     pp.keyword,
     pp.cnt,
     r.price
     from productfile p RIGHT outer join product pp 
     on p.productno = pp.productno inner join repository r on r.repositoryno = pp.repositoryno
     where p.thumb is not null
     <if test="categrpno != 0">
     and pp.categrpno =#{categrpno}
     </if>
     <if test="search != null">
     and PP.TITLE LIKE '%'||#{search}||'%' 
     </if>
     <if test="keyword != null">
      and keyword like '%'||#{keyword}||'%'
     </if>
     <if test="col != nll">
     order by pp.${col} desc
     </if>
     )
     WHERE row_cnt BETWEEN #{StartPageNumber} AND #{EndPageNumber} 
  </select>
  
  <select id="read" parameterType="int" resultType="ContentsVO">
    select r.cnt as repositorycnt, r.price as repositoryprice, p.title, 
    p.contents, p.productno,p.categrpno,c.name as categrpname,r.name as repositoryname,p.deliverycharge
    from categroup  c inner join product p 
    on c.categrpno = p.categrpno inner join repository r
    on p.repositoryno = r.repositoryno
    where p.productno = #{productno}
  </select>
  
  <update id="cnt_update" parameterType="int">
    update product set cnt = cnt + 1 where productno = #{productno}
  </update>
  
  <select id="update_read" parameterType="int" resultType="ContentsVO">
    select c.name as categrpname ,r.name as repositoryname, p.title, 
    p.contents, p.keyword, p.manager, p.productno, c.categrpno,p.deliverycharge
    from 
    categroup  c inner join product p 
    on c.categrpno = p.categrpno inner join repository r
    on p.repositoryno = r.repositoryno
    where p.productno = #{productno}
  </select>
  
  <update id="update" parameterType="ContentsVO">
    UPDATE PRODUCT 
    SET TITLE= #{title},
    KEYWORD = #{keyword},
    MANAGER = #{manager},
    CONTENTS = #{contents},
    CATEGRPNO = #{categrpno},
    REPOSITORYNO = #{repositoryno},
    deliveryCharge = #{deliveryCharge}
    WHERE PRODUCTNO = #{productno}
  </update>
  
  <delete id="delete" parameterType="int">
    DELETE FROM product
    where productno = #{productno}
  </delete>
  
  <update id="update_categrp" parameterType="HashMap">
       update product set categrpno = #{afterno_categrpno} 
       where repositoryno = #{repositoryno}
  </update>
  
  <select id="select_productno" resultType="int">
    SELECT NVL(MAX(PRODUCTNO), 0) FROM PRODUCT
  </select>
  
  <select id="total_count" resultType="int">
    select count(*) as cnt from product
  </select>
  
  <select id="images_load" parameterType="int" resultType="ProductfileVO">
    SELECT FNAME,FUPNAME,THUMB FROM PRODUCTFILE WHERE PRODUCTNO = #{productno}
    ORDER BY thumb DESC
  </select>
  
  <select id="images_cnt" parameterType="int" resultType="int">
     select count(*) as cnt 
     from productfile where productno = #{productno} and thumb is null
  </select>
  
  <delete id="images_delete" parameterType="String">
    DELETE FROM PRODUCTFILE WHERE FUPNAME= #{fupname}
  </delete>
  
  <select id="thum_select" parameterType="int" resultType="ProductfileVO">
    select fupname,thumb from productfile where productno = #{productno} and thumb is not null
  </select>
   <delete id="thum_delete" parameterType="int">
    DELETE from productfile where productno = #{productno} and thumb is not null
  </delete>
  
  <select id="count" parameterType="HashMap" resultType="int">
  	          select count(*) as cnt from product
  	          <choose>
  	          	<when test="categrpno != 0 and search != null">
  	          		 where  categrpno = #{categrpno} and title LIKE '%'||#{search}||'%'
  	          	</when>
  	          	<when test="categrpno != 0 and keyword != null">
  	          		where  categrpno = #{categrpno} and keyword like '%'||#{keyword}||'%'
  	          	</when>
  	          	<when test="search != null">
  	          		 where  title LIKE '%'||#{search}||'%' 
  	          	</when>
  	          	<when test="categrpno != 0">
	  	          	 where  categrpno = #{categrpno}
  	          	</when>
	          	<when test="keyword != null">
  	          		where keyword like '%'||#{keyword}||'%'
  	          	</when>
  	          </choose>
  </select>
  
</mapper>